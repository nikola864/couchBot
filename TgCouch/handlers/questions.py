from aiogram import Router, F, types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import Message, ReplyKeyboardRemove
from aiogram import Bot
from aiogram.utils.keyboard import ReplyKeyboardBuilder, InlineKeyboardBuilder

from config_reader import config
from keyboards.for_subscription import get_response_kb

class Registration(StatesGroup):
    name = State()
    mobile_number = State()
    nickname = State()


router = Router()

def get_back_button():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π '–ù–∞–∑–∞–¥'"""
    builder = InlineKeyboardBuilder()
    builder.row(
        types.InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É", callback_data="back_to_categories")
    )
    return builder.as_markup()


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    await message.answer(
        '–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ –ø–æ–º–æ—â–Ω–∏–∫ —ç–Ω–µ—Ä–≥–æ–∫–æ—É—á–∞ –∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä–∞ –ë–µ–ª—è–∫–æ–≤–∞.\n'
        '–ú–µ–Ω—è –∑–æ–≤—É—Ç –ë–µ–ª—è—à, –¥–∞–≤–∞–π—Ç–µ –ø–æ–∑–Ω–∞–∫–æ–º–∏–º—Å—è?\n'
        '\n'
        '<b>(–ù–∞–ø–∏—à–∏ —Ñ–∞–º–∏–ª–∏—é –∏ –∏–º—è)</b>',
    )
    await state.set_state(Registration.name)


@router.message(Registration.name, F.text)
async def process_name(message: Message, state: FSMContext):
    await state.update_data(full_name=message.text)

    builder = ReplyKeyboardBuilder()
    builder.add(
        types.KeyboardButton(
            text='–°–∫–∏–Ω—É—Ç—å —Å–≤–æ–π –Ω–æ–º–µ—Ä',
            request_contact=True
        )
    )

    await message.answer(
        f"–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {message.text}! üôå\n"
        "–¢–µ–ø–µ—Ä—å —Å–∫–∏–Ω—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ)",
        reply_markup=builder.as_markup(
            resize_keyboard=True,
            one_time_keyboard=True
        )
    )
    await state.set_state(Registration.mobile_number)


@router.message(Registration.mobile_number, F.contact)
async def process_mobile_number(message: Message, state: FSMContext):
    phone_number = message.contact.phone_number
    await state.update_data(phone_number=phone_number)

    await message.answer(
        '–û—Ç–ª–∏—á–Ω–æ! –ê —Ç–µ–ø–µ—Ä—å –Ω–∞–ø–∏—à–∏ —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –≤ Telegram (–Ω–∞–ø—Ä–∏–º–µ—Ä, @sumasoshedshiy):'
    )
    await state.set_state(Registration.nickname)


@router.message(Registration.nickname, F.text)
async def process_nickname(message: Message, state: FSMContext, bot: Bot):
    await state.update_data(nickname=message.text)

    data = await state.get_data()
    full_name = data['full_name']
    phone_number = data['phone_number']
    nickname = data['nickname']
    user_id = message.from_user.id

    admin_message = (
        "üì© <b>–ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!</b>\n"
        f"üë§ <b>–§–ò–û:</b> {full_name}\n"
        f"üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {phone_number}\n"
        f"üîó <b>–ù–∏–∫–Ω–µ–π–º:</b> {nickname}\n"
        f"üÜî <b>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</b> {user_id}"
    )

    try:
        await bot.send_message(
            chat_id=config.admin_id,
            text=admin_message,
            parse_mode="HTML"
        )
    except Exception as e:
        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É: {e}")

    await message.answer(
        '–ö—Å—Ç–∞—Ç–∏, –∞ —Ç—ã –ø–æ–¥–ø–∏—Å–∞–Ω –Ω–∞ –∫–∞–Ω–∞–ª "–ê–Ω–≥–µ–ª—ã –°–∞–Ω–∏"?\n'
        'https://t.me/angeliSani',
        reply_markup=get_response_kb()
    )

    await state.clear()


@router.message(F.text.lower() == '–¥–∞, –ø–æ–¥–ø–∏—Å–∞–Ω(–∞)')
async def answer_yes(message: Message, bot: Bot):
    try:
        member = await bot.get_chat_member(chat_id=-1002485471071, user_id=message.from_user.id)

        if member.status in ["member", "administrator", "creator"]:
            builder = ReplyKeyboardBuilder()
            builder.add(types.KeyboardButton(text="–£—Å–ª—É–≥–∏ –°–∞—à–∏ –ë–µ–ª—è–∫–æ–≤–∞"))

            await message.answer(
                "‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! –î–µ—Ä–∂–∏ –ø–æ–¥–∞—Ä–æ–∫:",
                reply_markup=builder.as_markup(resize_keyboard=True)
            )

            await message.answer_audio(
                audio="CQACAgIAAxkBAAE6rgtovAABMrEzOXjdRrMAAcBQWYJf3SmIAAIdewACuZgYS4D-OA_oxMdSNgQ",
                caption="üéß <b>–≠–Ω–µ—Ä–≥–æ–ø—Ä–∞–∫—Ç–∏–∫–∞: –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –æ—Ç –∏–∑–ª–∏—à–Ω–µ–≥–æ –Ω–∞–ø—Ä—è–∂–µ–Ω–∏—è</b>\n\n"
                        "–ê–≤—Ç–æ—Ä ‚Äî –ê–ª–µ–∫—Å–∞–Ω–¥—Ä –ë–µ–ª—è–∫–æ–≤.\n"
                        "–°–ª—É—à–∞–π —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏, –≤ —Ç–∏—à–∏–Ω–µ.",
                parse_mode="HTML"
            )
        else:
            await message.answer(
                "‚ùå –Ø –Ω–µ –≤–∏–∂—É —Ç–µ–±—è –≤ –ø–æ–¥–ø–∏—Å—á–∏–∫–∞—Ö. –ü–æ–¥–ø–∏—à–∏—Å—å: https://t.me/angeliSani"
            )
    except Exception as e:
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–Ω.")
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")


@router.message(F.text.lower() == '–Ω–µ—Ç, –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω(–∞)')
async def answer_no(message: Message):
    await message.answer(
        '–¢–æ–≥–¥–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥–∞—Ä–æ–∫:\n'
        'https://t.me/angeliSani\n\n'
        '–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –≤–µ—Ä–Ω–∏—Å—å –∏ –Ω–∞–∂–º–∏ "–î–∞, –ø–æ–¥–ø–∏—Å–∞–Ω(–∞)"',
        reply_markup=get_response_kb()
    )


@router.message(F.text == "–£—Å–ª—É–≥–∏ –°–∞—à–∏ –ë–µ–ª—è–∫–æ–≤–∞")
async def show_services(message: Message):
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(text="1. –õ–∏—á–Ω—ã–π –≠–Ω–µ—Ä–≥–æ–∫–æ—É—á–∏–Ω–≥", callback_data="coaching_personal"))
    builder.row(types.InlineKeyboardButton(text="2. –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Å–µ—Å—Å–∏—è", callback_data="psych_session"))
    builder.row(types.InlineKeyboardButton(text="3. –ü—Å–∏—Ö–æ–º–æ—Ç–æ—Ä–Ω–æ–µ –ø–∏—Å—å–º–æ –∏ –ú–ê–ö-–∫–∞—Ä—Ç—ã", callback_data="mak_method"))
    builder.row(types.InlineKeyboardButton(text="4. –û—Å–æ–∑–Ω–∞–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ", callback_data="breathing_practice"))
    builder.row(types.InlineKeyboardButton(text="5. –ö—É—Ä—Å ¬´–ê–Ω–≥–µ–ª—ã –ò–∑–æ–±–∏–ª–∏—è¬ª", callback_data="angels_course"))

    await message.answer("–£—Å–ª—É–≥–∏ –°–∞—à–∏ –ë–µ–ª—è–∫–æ–≤–∞", reply_markup=builder.as_markup())
    await message.answer("–ú–æ–∂–µ—à—å –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=ReplyKeyboardRemove())


@router.callback_query(F.data == "coaching_personal")
async def show_coaching_personal(callback: types.CallbackQuery):
    text = (
        "<b>–≠–Ω–µ—Ä–≥–æ–∫–æ—É—á–∏–Ω–≥ –º–µ—Ç–æ–¥ –°–û–õ–û</b>\n\n"
        "<b>‚Ññ3</b> –õ–∏—á–Ω–∞—è –≠–Ω–µ—Ä–≥–æ—Ç–µ—Ä–∞–ø–∏—è ‚Äì 7000 —Ä—É–±.\n"
        "–û–ø–ª–∞—Ç–∞: https://payform.ru/tf83K7G/\n\n"
        "<b>‚Ññ4</b> –ü–µ—Ä–≤–∞—è/–°—Ç—É–¥–µ–Ω—á–µ—Å–∫–∞—è –≠–Ω–µ—Ä–≥–æ—Ç–µ—Ä–∞–ø–∏—è ‚Äì 3500 —Ä—É–±.\n"
        "–û–ø–ª–∞—Ç–∞: https://payform.ru/gd83KgR/"
    )
    await callback.message.answer(text, parse_mode="HTML", reply_markup=get_back_button())
    await callback.answer()


@router.callback_query(F.data == "psych_session")
async def show_psych_session(callback: types.CallbackQuery):
    text = (
        "<b>–ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Å–µ—Å—Å–∏—è</b>\n\n"
        "<b>‚Ññ5</b> –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å–µ—Å—Å–∏—è ‚Äì 2000 —Ä—É–±.\n"
        "–û–ø–ª–∞—Ç–∞: https://payform.ru/908oCGZ/\n\n"
        "<b>‚Ññ6</b> –ü–µ—Ä–≤–∞—è —Å–µ—Å—Å–∏—è —Å–æ —Å–∫–∏–¥–∫–æ–π 50% ‚Äì 1000 —Ä—É–±.\n"
        "–û–ø–ª–∞—Ç–∞: https://payform.ru/de8oCZt/"
    )
    await callback.message.answer(text, parse_mode="HTML", reply_markup=get_back_button())
    await callback.answer()


@router.callback_query(F.data == "mak_method")
async def show_mak_method(callback: types.CallbackQuery):
    text = (
        "<b>–ú–µ—Ç–æ–¥ –ü—Å–∏—Ö–æ–º–æ—Ç–æ—Ä–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –∏ –ú–ê–ö</b>\n\n"
        "<b>‚Ññ7</b> –†–∞–∑–æ–≤–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è ‚Äì 1000 —Ä—É–±.\n"
        "–û–ø–ª–∞—Ç–∞: https://payform.ru/sm8oD7A/\n\n"
        "<b>‚Ññ8</b> –ú–µ—Å—è—á–Ω—ã–π –∫—É—Ä—Å (10 —Å–µ—Å—Å–∏–π) ‚Äì 6000 —Ä—É–±.\n"
        "–û–ø–ª–∞—Ç–∞: https://payform.ru/ao8oDea/"
    )
    await callback.message.answer(text, parse_mode="HTML", reply_markup=get_back_button())
    await callback.answer()


@router.callback_query(F.data == "breathing_practice")
async def show_breathing_practice(callback: types.CallbackQuery):
    text = (
        "<b>–ì—Ä—É–ø–ø–æ–≤–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–≥–æ –¥—ã—Ö–∞–Ω–∏—è</b>\n\n"
        "<b>‚Ññ9</b> –ó–∞–Ω—è—Ç–∏–µ –Ω–∞ ZOOM (1 —Ä–∞–∑ –≤ –Ω–µ–¥–µ–ª—é) ‚Äì 500 —Ä—É–±.\n"
        "–û–ø–ª–∞—Ç–∞: https://payform.ru/qb8oDmt/"
    )
    await callback.message.answer(text, parse_mode="HTML", reply_markup=get_back_button())
    await callback.answer()


@router.callback_query(F.data == "angels_course")
async def show_angels_course(callback: types.CallbackQuery):
    text = (
        "<b>–ö—É—Ä—Å ¬´–ê–Ω–≥–µ–ª—ã –ò–∑–æ–±–∏–ª–∏—è¬ª</b>\n\n"
        "<b>‚Ññ1</b> –¢–∞—Ä–∏—Ñ ¬´–ê–Ω–≥–µ–ª –ò–∑–æ–±–∏–ª–∏—è¬ª ‚Äì 3333 —Ä—É–±.\n"
        "–û–ø–ª–∞—Ç–∞: https://payform.ru/tf83Hgg/\n\n"
        "<b>‚Ññ2</b> –¢–∞—Ä–∏—Ñ ¬´–°–µ—Ä–∞—Ñ–∏–º¬ª ‚Äì 11111 —Ä—É–±.\n"
        "–û–ø–ª–∞—Ç–∞: https://payform.ru/3b83JDE/"
    )
    await callback.message.answer(text, parse_mode="HTML", reply_markup=get_back_button())
    await callback.answer()


# –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" ‚Äî –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–π
@router.callback_query(F.data == "back_to_categories")
async def back_to_categories(callback: types.CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.row(types.InlineKeyboardButton(text="1. –õ–∏—á–Ω—ã–π –≠–Ω–µ—Ä–≥–æ–∫–æ—É—á–∏–Ω–≥", callback_data="coaching_personal"))
    builder.row(types.InlineKeyboardButton(text="2. –ü—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∞—è —Å–µ—Å—Å–∏—è", callback_data="psych_session"))
    builder.row(types.InlineKeyboardButton(text="3. –ü—Å–∏—Ö–æ–º–æ—Ç–æ—Ä–Ω–æ–µ –ø–∏—Å—å–º–æ –∏ –ú–ê–ö-–∫–∞—Ä—Ç—ã", callback_data="mak_method"))
    builder.row(types.InlineKeyboardButton(text="4. –û—Å–æ–∑–Ω–∞–Ω–Ω–æ–µ –¥—ã—Ö–∞–Ω–∏–µ", callback_data="breathing_practice"))
    builder.row(types.InlineKeyboardButton(text="5. –ö—É—Ä—Å ¬´–ê–Ω–≥–µ–ª—ã –ò–∑–æ–±–∏–ª–∏—è¬ª", callback_data="angels_course"))

    await callback.message.answer("–£—Å–ª—É–≥–∏ –°–∞—à–∏ –ë–µ–ª—è–∫–æ–≤–∞?", reply_markup=builder.as_markup())
    await callback.answer()